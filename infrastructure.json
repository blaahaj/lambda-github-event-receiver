{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "CodeS3Bucket": {
        "Type": "String"
    },
    "CodeS3Key": {
        "Type": "String"
    }
  },
  "Resources": {
    "Queue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "1209600",
        "ReceiveMessageWaitTimeSeconds": "0",
        "VisibilityTimeout": "30"
      }
    },
    "Topic": {
      "Type": "AWS::SNS::Topic"
    },
    "Subscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": { "Ref": "Topic" },
        "Protocol": "sqs",
        "Endpoint": { "Fn::GetAtt": ["Queue", "Arn"] }
      }
    },
    "QueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SQS:SendMessage",
              "Resource": { "Fn::GetAtt": ["Queue", "Arn"] },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": { "Ref": "Topic" }
                }
              }
            }
          ]
        },
        "Queues": [{ "Ref": "Queue" }]
      }
    },
    "Secret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Name": { "Fn::Sub": "${AWS::StackName}-secret" }
      }
    },
    "FunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "publish-to-sns",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "sns:Publish",
                  "Resource": { "Ref": "Topic" }
                }
              ]
            }
          },
          {
            "PolicyName": "read-secret",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "secretsmanager:GetSecretValue",
                  "Resource": { "Ref": "Secret" }
                }
              ]
            }
          }
        ]
      }
    },
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "CodeS3Bucket" },
          "S3Key": { "Ref": "CodeS3Key" }
        },
        "Handler": "dist/src/index.handler",
        "Role": { "Fn::GetAtt": ["FunctionRole", "Arn"] },
        "Runtime": "nodejs20.x",
        "MemorySize": 128,
        "Timeout": 5,
        "Environment": {
          "Variables": {
            "SNS_TOPIC_ARN": { "Ref": "Topic" },
            "GITHUB_SIGNING_SECRET_ID": { "Ref": "Secret" }
          }
        },
        "LoggingConfig": {
          "ApplicationLogLevel": "INFO",
          "LogFormat": "JSON",
          "SystemLogLevel": "INFO"
        }
      }
    },
    "FunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": { "Fn::GetAtt": ["Function", "Arn"] }
      }
    },
    "LoggingPolicy": {
      "Type": "AWS::IAM::RolePolicy",
      "Properties": {
        "RoleName": { "Ref": "FunctionRole" },
        "PolicyName": "log-to-cloudwatch",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "logs:CreateLogGroup",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*"
              }
            },
            {
              "Effect": "Allow",
              "Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/"
                      },
                      { "Ref": "Function" },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  }
}
